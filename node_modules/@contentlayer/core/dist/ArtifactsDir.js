import { filePathJoin, fs } from '@contentlayer/utils';
import { pipe, T } from '@contentlayer/utils/effect';
import { getContentlayerVersion } from '@contentlayer/utils/node';
import { getCwd } from './cwd.js';
// import utilsPkg from '@contentlayer/utils/package.json'
export var ArtifactsDir;
(function (ArtifactsDir) {
    ArtifactsDir.getDirPath = ({ cwd }) => filePathJoin(cwd, '.contentlayer');
    ArtifactsDir.mkdir = T.gen(function* ($) {
        const cwd = yield* $(getCwd);
        const dirPath = ArtifactsDir.getDirPath({ cwd });
        yield* $(fs.mkdirp(dirPath));
        return dirPath;
    });
    ArtifactsDir.getCacheDirPath = pipe(T.struct({
        contentlayerVersion: getContentlayerVersion(),
        cwd: getCwd,
    }), T.map(({ contentlayerVersion, cwd }) => filePathJoin(ArtifactsDir.getDirPath({ cwd }), '.cache', `v${contentlayerVersion}`)));
    ArtifactsDir.mkdirCache = pipe(ArtifactsDir.getCacheDirPath, T.tap((_) => fs.mkdirp(_)));
})(ArtifactsDir || (ArtifactsDir = {}));
//# sourceMappingURL=ArtifactsDir.js.map